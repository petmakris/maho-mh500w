component odometer;

pin in float velocity;
pin out bit active;
pin out unsigned times_active;

param rw float trigger_distance = 10000;
param rw unsigned active_duration = 8000;
param rw bit activate_on_boot = true;

function _;
license "GPL";
;;

static unsigned time_active_counter;
static double distance;
static bool is_active;
static bool _on_boot;

FUNCTION(_) {

    if(_on_boot && activate_on_boot) {
    
    }
    if (activate_on_boot) {
        activate_on_boot = false;
        is_active = true;
        times_active += 1;
    }

    if (!is_active) {
        distance += velocity * (fperiod);

        if (distance > trigger_distance) {
            is_active = true;
            times_active += 1;
            distance = 0;
        }
    }

    if (is_active) {
        time_active_counter += (period / 1000000);
        if (time_active_counter <= active_duration) {
            active = true;
        } else {
            active = false;
            is_active = false;
        }
    } else {
        active = false;
        time_active_counter = 0;
    }
}